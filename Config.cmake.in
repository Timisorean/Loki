@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

##############################################################
# CMake modules and macro files
##############################################################

include("${CMAKE_CURRENT_LIST_DIR}/cmake/configure_boost.cmake")


##############################################################
# Dependency Handling
##############################################################

# Our integration superbuild installs its dependencies
# in respective subdirectories, e.g., boost, googletest, benchmark

# Boost
# Find Boost headers only according to https://cmake.org/cmake/help/latest/module/FindBoost.html
configure_boost()
find_dependency(Boost ${BOOST_MIN_VERSION} REQUIRED PATHS "${PACKAGE_PREFIX_DIR}/boost" NO_SYSTEM_ENVIRONMENT_PATH)

if(Boost_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
  message(STATUS "Found Boost: ${Boost_INCLUDE_DIRS} (found version \"${Boost_VERSION}\")")
endif()


############
# Components
############

set(_loki_supported_components parsers)

foreach(_comp ${loki_FIND_COMPONENTS})
  if (NOT _comp IN_LIST _loki_supported_components)
    set(loki_FOUND False)
    set(loki_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
  endif()
  include("${CMAKE_CURRENT_LIST_DIR}/loki${_comp}Targets.cmake")
endforeach()

get_filename_component(LOKI_CONFIG_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
message(STATUS "Found loki: ${LOKI_CONFIG_DIR} (found version \"${loki_VERSION}\")")
