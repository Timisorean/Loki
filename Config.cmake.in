@PACKAGE_INIT@

include("${CMAKE_CURRENT_LIST_DIR}/cmake/configure_boost.cmake")

##############
# Dependencies
##############

message(STATUS "CMAKE_PREFIX_PATH: ${CMAKE_PREFIX_PATH}")
list(LENGTH CMAKE_PREFIX_PATH PREFIX_PATH_COUNT)
if(PREFIX_PATH_COUNT GREATER 1)
    message(FATAL_ERROR "Only one prefix path is allowed. Found multiple paths in CMAKE_PREFIX_PATH. Please add dependencies to the CMake Superbuild.")
endif()

list(APPEND MODIFIED_CMAKE_PREFIX_PATH
    "${CMAKE_PREFIX_PATH}/benchmark"
    "${CMAKE_PREFIX_PATH}/boost"
    "${CMAKE_PREFIX_PATH}/googletest")
message(${MODIFIED_CMAKE_PREFIX_PATH})
set(CMAKE_PREFIX_PATH ${MODIFIED_CMAKE_PREFIX_PATH})
message(STATUS "MODIFIED_CMAKE_PREFIX_PATH:")
foreach(CMAKE_PREFIX_PATH_ARG ${CMAKE_PREFIX_PATH})
    message(STATUS "-- ${CMAKE_PREFIX_PATH_ARG}")
endforeach()

include(CMakeFindDependencyMacro)

configure_boost()
find_dependency(Boost ${BOOST_MIN_VERSION} REQUIRED)
if(Boost_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
endif()


############
# Components
############

set(_loki_supported_components parsers)

foreach(_comp ${loki_FIND_COMPONENTS})
  if (NOT _comp IN_LIST _loki_supported_components)
    set(loki_FOUND False)
    set(loki_NOT_FOUND_MESSAGE "Unsupported component: ${_comp}")
  endif()
  include("${CMAKE_CURRENT_LIST_DIR}/loki${_comp}Targets.cmake")
endforeach()

get_filename_component(LOKI_CONFIG_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
message(STATUS "Found loki: ${LOKI_CONFIG_DIR} (found version \"${loki_VERSION}\")")